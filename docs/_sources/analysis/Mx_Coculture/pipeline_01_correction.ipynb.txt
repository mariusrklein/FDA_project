{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "967e2409",
   "metadata": {
    "papermill": {
     "duration": 0.007362,
     "end_time": "2022-12-06T15:35:55.380791",
     "exception": false,
     "start_time": "2022-12-06T15:35:55.373429",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Mx_Coculture: Correction\n",
    "\n",
    "SpaceM datasets are usually stored as annotated data-matrices, separately for individual wells. With this notebooks, these individual files are corrected for ion suppression on the pixel-level and then deconvoluted to cell-level. All resulting files are saved separately by well to the target_path and the impact of the correction briefly shown for visual inspection."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b08a1b84",
   "metadata": {
    "papermill": {
     "duration": 4.316287,
     "end_time": "2022-12-06T15:35:59.702814",
     "exception": false,
     "start_time": "2022-12-06T15:35:55.386527",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import platform\n",
    "import scanpy as sc\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import anndata as ad\n",
    "import statistics as st\n",
    "import multiprocessing\n",
    "from joblib import Parallel, delayed\n",
    "from tqdm import tqdm\n",
    "import statsmodels.formula.api as smf\n",
    "import seaborn as sns\n",
    "import re\n",
    "from importlib import reload\n",
    "import json\n",
    "import sys\n",
    "sys.path.append('/home/mklein/spacem')\n",
    "sys.path.append('/home/mklein/FDA_project')\n",
    "\n",
    "from src.correction import (add_normalization_factors, \n",
    "                            correct_quantile_inplace,\n",
    "                            deconvolution_spacem,\n",
    "                            get_overlap_data,\n",
    "                            add_overlap_matrix_spacem\n",
    "                           )\n",
    "from src import const \n",
    "from SpaceM.lib.modules import (\n",
    "    overlap_analysis,\n",
    "    single_cell_analysis_normalization\n",
    ")\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2be86b0",
   "metadata": {
    "papermill": {
     "duration": 0.006872,
     "end_time": "2022-12-06T15:35:59.718067",
     "exception": false,
     "start_time": "2022-12-06T15:35:59.711195",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The original data lies on the groups shared data storage. Corrected files will be saved in a separate location, preserving the well-specific folder structure."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "95750978",
   "metadata": {
    "papermill": {
     "duration": 0.019014,
     "end_time": "2022-12-06T15:35:59.743412",
     "exception": false,
     "start_time": "2022-12-06T15:35:59.724398",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "if platform.system() == \"Darwin\":\n",
    "    source_path = '/Volumes/alexandr/smenon/2022-07-13_Glioblastoma/processed_files'\n",
    "    target_path = '/Volumes/mklein/FDA_project/data/Lx_Glioblastoma'\n",
    "else:\n",
    "    source_path = '/g/alexandr/smenon/2022-07-13_Glioblastoma/processed_files'\n",
    "    target_path = '/home/mklein/FDA_project/data/Lx_Glioblastoma'\n",
    "    \n",
    "# TODO: implement topX reference ion pool.\n",
    "reference_pool = {'top': 10}\n",
    "deconv_default_min_overlap = 0.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d3cdc205",
   "metadata": {
    "papermill": {
     "duration": 0.017111,
     "end_time": "2022-12-06T15:35:59.766973",
     "exception": false,
     "start_time": "2022-12-06T15:35:59.749862",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "source_path = \"/home/mklein/Raw Data/Coculture\"\n",
    "target_path = \"/home/mklein/FDA_project/data/Mx_Co_Cultured\"\n",
    "condition_name = \"condition\"\n",
    "well_name = \"rowcol\"\n",
    "deconv_default_min_overlap = 0.3\n",
    "analysis_path = \"/home/mklein/FDA_project/analysis/Mx_Coculture\"\n",
    "notebooks = [\n",
    "    \"pipeline_01_correction.ipynb\",\n",
    "    \"pipeline_02_processing.ipynb\",\n",
    "    \"pipeline_03_evaluation.ipynb\",\n",
    "]\n",
    "project = \"Mx_Coculture\"\n",
    "correction_proportion_threshold = 0.03"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e0d9a5db",
   "metadata": {
    "papermill": {
     "duration": 0.023525,
     "end_time": "2022-12-06T15:35:59.796878",
     "exception": false,
     "start_time": "2022-12-06T15:35:59.773353",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['dataset']"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "samples = []\n",
    "for dirpath, dirnames, filenames in os.walk(source_path):\n",
    "        if 'analysis' in dirnames:\n",
    "            samples.append(re.sub(source_path+'/?', '', dirpath))\n",
    "samples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "375d06df",
   "metadata": {
    "papermill": {
     "duration": 0.015021,
     "end_time": "2022-12-06T15:35:59.817985",
     "exception": false,
     "start_time": "2022-12-06T15:35:59.802964",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "files = {\n",
    "        'config': '../config.json',\n",
    "        'sm_matrix': 'ablation_mark_analysis/spatiomolecular_adata.h5ad',\n",
    "        'overlap_regions': 'overlap_analysis2/overlap.regions.csv',\n",
    "        'mark_regions': 'overlap_analysis2/ablation_mark.regions.csv',\n",
    "        'cell_regions': 'overlap_analysis2/cell.regions.csv',\n",
    "        'cell_sm_matrix': 'single_cell_analysis/spatiomolecular_adata.h5ad',\n",
    "    }"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "19c81ab5",
   "metadata": {
    "papermill": {
     "duration": 0.018799,
     "end_time": "2022-12-06T15:35:59.842699",
     "exception": false,
     "start_time": "2022-12-06T15:35:59.823900",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def assign_average_tpo(am_adata, overlap_data, min_overlap, method=np.mean):\n",
    "    if min_overlap is None:\n",
    "        min_overlap = 0\n",
    "    \n",
    "    overlap = overlap_data.overlap_regions\n",
    "    overlap['am_id'] = overlap['am_id'].astype(str)\n",
    "    overlap['cell_id'] = overlap['cell_id'].astype(str)\n",
    "    merged_df = pd.merge(overlap[['am_id', 'cell_id']], am_adata.obs[const.TPO], left_on='am_id', right_index=True)\n",
    "    merged_df = merged_df[merged_df[const.TPO] >= min_overlap]\n",
    "    \n",
    "    mean_df = merged_df[['cell_id', 'correction_total_pixel_overlap']].groupby('cell_id', group_keys=False).agg(method)\n",
    "#     mean_df = merged_df[['cell_id', 'correction_total_pixel_overlap']].groupby('cell_id', group_keys=False).agg(lambda x: method(x))\n",
    "    return mean_df[const.TPO]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b1b3db67",
   "metadata": {
    "papermill": {
     "duration": 0.025348,
     "end_time": "2022-12-06T15:35:59.873847",
     "exception": false,
     "start_time": "2022-12-06T15:35:59.848499",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def correct_sample_spacem(sample):\n",
    "    \n",
    "    sample_path = os.path.join(source_path, sample, \"analysis\")\n",
    "    sample = re.sub('/', '_', sample)\n",
    "    \n",
    "    if not os.path.exists(os.path.join(target_path, sample)):\n",
    "        os.makedirs(os.path.join(target_path, sample))\n",
    "\n",
    "    # get appropriate file paths for the processed well\n",
    "    project_files = {k: os.path.join(sample_path, v) for k, v in files.items()}\n",
    "\n",
    "    if os.path.exists(project_files['config']):\n",
    "        with open(project_files['config']) as json_file:\n",
    "            data = json.load(json_file)\n",
    "        deconv_info = data['single_cell_analysis']\n",
    "        if deconv_info['ablation_marks_min_overlap_ratio'] is None:\n",
    "            deconv_info['ablation_marks_min_overlap_ratio'] = deconv_default_min_overlap\n",
    "    else:\n",
    "        deconv_info = {'cell_normalization_method': 'weighted_by_overlap_and_sampling_area', \n",
    "                       'ablation_marks_min_overlap_ratio': 0\n",
    "        }\n",
    "        print('No well config file found. Using default deconvolution parameters.')\n",
    "    # load required files\n",
    "    cell_regions = pd.read_csv(project_files['cell_regions'])\n",
    "    mark_regions = pd.read_csv(project_files['mark_regions'])\n",
    "    overlap_regions = pd.read_csv(project_files['overlap_regions'])\n",
    "    \n",
    "    sm_matrix = sc.read(os.path.join(sample_path, files['sm_matrix']))\n",
    "    cell_sm_matrix = sc.read(os.path.join(sample_path, files['cell_sm_matrix']))\n",
    "       \n",
    "    \n",
    "    add_overlap_matrix_spacem(sm_matrix, cell_regions, mark_regions, overlap_regions)\n",
    "    add_normalization_factors(adata=sm_matrix, method=st.median)\n",
    "        \n",
    "    # perform the actual quantile regression\n",
    "    corr_sm_matrix = correct_quantile_inplace(adata=sm_matrix, \n",
    "        reference_ions=sm_matrix.var_names, \n",
    "        correct_intersect = True,\n",
    "        proportion_threshold = correction_proportion_threshold,\n",
    "        n_jobs=5)\n",
    "    \n",
    "    # perform pixel-cell-deconvolution\n",
    "    overlap_data = get_overlap_data(cell_regions, mark_regions, overlap_regions)\n",
    "    # corr_cell_sm_matrix = deconvolution_spacem(adata=corr_sm_matrix, \n",
    "    #     overlap_data=overlap_data,\n",
    "    #     raw_adata=cell_sm_matrix,\n",
    "    #     deconvolution_params=deconv_info)\n",
    "    # gen_cell_sm_matrix = deconvolution_spacem(adata=sm_matrix,\n",
    "    #     overlap_data=overlap_data,\n",
    "    #     raw_adata=cell_sm_matrix,\n",
    "    #     deconvolution_params=deconv_info)\n",
    "    \n",
    "    from src.correction import deconvolution_rappez, get_matrices_from_dfs, add_matrices\n",
    "    overlap_matrix, sampling_spec_matrix = get_matrices_from_dfs(mark_area=mark_regions, cell_area=cell_regions, marks_cell_overlap=overlap_regions)\n",
    "    add_matrices(adata = sm_matrix, overlap_matrix = overlap_matrix, sampling_spec_matrix = sampling_spec_matrix)\n",
    "    add_matrices(adata = corr_sm_matrix, overlap_matrix = overlap_matrix, sampling_spec_matrix = sampling_spec_matrix)\n",
    "    \n",
    "    gen_cell_sm_matrix = deconvolution_rappez(sm_matrix, raw_adata=cell_sm_matrix)\n",
    "    corr_cell_sm_matrix = deconvolution_rappez(corr_sm_matrix, raw_adata=cell_sm_matrix)\n",
    "\n",
    "    # hand over TPOs to spatiomolecular matrix for downstream analysis\n",
    "    min_overlap = deconv_info['ablation_marks_min_overlap_ratio']\n",
    "    corr_cell_sm_matrix.obs['list_TPO'] = assign_average_tpo(sm_matrix, overlap_data, min_overlap, method=lambda x: \";\".join(x.astype(str)))\n",
    "    gen_cell_sm_matrix.obs['list_TPO'] = assign_average_tpo(sm_matrix, overlap_data, min_overlap, method=lambda x: \";\".join(x.astype(str)))\n",
    "    \n",
    "    # write the generated files to the dedicated project location.\n",
    "    corr_sm_matrix.write(os.path.join(target_path, sample, 'am_spatiomolecular_adata_corrected.h5ad'))\n",
    "    sm_matrix.write(os.path.join(target_path, sample, 'am_spatiomolecular_adata.h5ad'))\n",
    "    corr_cell_sm_matrix.write(os.path.join(target_path, sample, 'cells_spatiomolecular_adata_corrected.h5ad'))\n",
    "    cell_sm_matrix.write(os.path.join(target_path, sample, 'cells_spatiomolecular_adata_spacem.h5ad'))\n",
    "    gen_cell_sm_matrix.write(os.path.join(target_path, sample, 'cells_spatiomolecular_adata.h5ad'))\n",
    "    #               deconv using own implementation                                                  deconv by Martijn\n",
    "    return (sample, gen_cell_sm_matrix, corr_cell_sm_matrix, sm_matrix, corr_sm_matrix, deconv_info, cell_sm_matrix)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0d7433e1",
   "metadata": {
    "papermill": {
     "duration": 0.005724,
     "end_time": "2022-12-06T15:35:59.885105",
     "exception": false,
     "start_time": "2022-12-06T15:35:59.879381",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "This is the actual correction pipeline."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9c9d76fc",
   "metadata": {
    "papermill": {
     "duration": 5.863652,
     "end_time": "2022-12-06T15:36:05.754419",
     "exception": true,
     "start_time": "2022-12-06T15:35:59.890767",
     "status": "failed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "  0%|          | 0/1 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No well config file found. Using default deconvolution parameters.\n",
      "Using 115 pixels to calculate full-pixel avereage intensities.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 1/1 [00:16<00:00, 16.08s/it]\n"
     ]
    }
   ],
   "source": [
    "# adata_list = Parallel(n_jobs=7)(delayed(correct_sample_spacem)(sample) for sample in tqdm(samples))\n",
    "adata_list = [correct_sample_spacem(sample) for sample in tqdm(['dataset'])]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a46b6863",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ablation_marks_min_overlap_ratio</th>\n",
       "      <th>cell_normalization_method</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>dataset</th>\n",
       "      <td>0</td>\n",
       "      <td>weighted_by_overlap_and_sampling_area</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        ablation_marks_min_overlap_ratio  \\\n",
       "dataset                                0   \n",
       "\n",
       "                     cell_normalization_method  \n",
       "dataset  weighted_by_overlap_and_sampling_area  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# reshape data for immediate analysis\n",
    "gen_adata_dict = {item[0]: item[1] for item in adata_list}\n",
    "adata_cor_dict = {item[0]: item[2] for item in adata_list}\n",
    "am_adata_dict = {item[0]: item[3] for item in adata_list}\n",
    "am_adata_cor_dict = {item[0]: item[4] for item in adata_list}\n",
    "adata_dict = {item[0]: item[6] for item in adata_list}\n",
    "\n",
    "am_adata = ad.concat(am_adata_dict, label='well', index_unique=\"_\", merge=\"first\")\n",
    "am_adata_cor = ad.concat(am_adata_cor_dict, label='well', index_unique=\"_\", merge='first')\n",
    "gen_adata = ad.concat(gen_adata_dict, label='well', index_unique=\"_\", merge=\"first\")\n",
    "adata = ad.concat(adata_dict, label='well', index_unique=\"_\", merge=\"first\")\n",
    "adata_cor = ad.concat(adata_cor_dict, label='well', index_unique=\"_\", merge=\"first\")\n",
    "\n",
    "deconv_dict = {item[0]: item[5] for item in adata_list}\n",
    "deconv_table = pd.DataFrame(deconv_dict).T\n",
    "deconv_table"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9df492cd-1020-4da0-a5e4-93eaba8cb8e2",
   "metadata": {},
   "source": [
    "The ion suppression correction takes a parameter proportion_threshold to filter the pixels used to compute quantile regression. In particular, pixels with a sampling proportion lower than the threshold are excluded for this step. In contrast, the actual correction is then performed on all pixels in the dataset. As a consequence, for the majority of the dataset, the dependence of the data on the factor \"sampling_proportion\" is not completely removed by the correction. Instead, depending on the difference in slope between the complete and thresholded set of pixels, the corrected set of pixels has a positive or negative dependence on the factor \"sampling_proportion\". The larger the proportion_threshold, the stronger this deviation can get.\n",
    "\n",
    "In the following figure, these differences are visualized for a subset of ions (with very low/high correction slope) and wells. The top panel shows the logarithmic ion intensity/proportion ratio plotted against the log proportion ratio of the respective pixels. As this is the relationship used to compute the quantile regression, the resulting regression lines can also be shown. The black lines show the quantile regression of the total set of pixels in a well, the red lines for the thresholded set (shown as orange squares). In turn, the blue squares are disregarded in calculating the correction slope. The bottom panel shows the corresponding corrected sets of pixels with black lines again representing the quantile regression on the complete set of pixels."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "20afa161",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "bbb1ef44",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "am_adata.obs[const.TPO] = am_adata_cor.obs[const.TPO]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "10879803-1d7f-456e-8a22-fb75cd4bdfc9",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>intercept_correction</th>\n",
       "      <th>intercept_glob_ISM_correction</th>\n",
       "      <th>intercept_glob_uncorrected</th>\n",
       "      <th>slope_correction</th>\n",
       "      <th>slope_glob_ISM_correction</th>\n",
       "      <th>slope_glob_uncorrected</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ion</th>\n",
       "      <th>well</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>C35H69O8P</th>\n",
       "      <th>dataset</th>\n",
       "      <td>0.012122</td>\n",
       "      <td>0.023198</td>\n",
       "      <td>0.023198</td>\n",
       "      <td>-1.038932</td>\n",
       "      <td>0.034778</td>\n",
       "      <td>-1.004155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C34H68NO6P</th>\n",
       "      <th>dataset</th>\n",
       "      <td>0.026882</td>\n",
       "      <td>0.034094</td>\n",
       "      <td>0.034094</td>\n",
       "      <td>-1.007595</td>\n",
       "      <td>0.028215</td>\n",
       "      <td>-0.979381</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C43H81O13P</th>\n",
       "      <th>dataset</th>\n",
       "      <td>0.179587</td>\n",
       "      <td>0.175546</td>\n",
       "      <td>0.175546</td>\n",
       "      <td>-0.108584</td>\n",
       "      <td>-0.029229</td>\n",
       "      <td>-0.137813</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C43H78NO8P</th>\n",
       "      <th>dataset</th>\n",
       "      <td>-0.081978</td>\n",
       "      <td>-0.092249</td>\n",
       "      <td>-0.092249</td>\n",
       "      <td>-0.073275</td>\n",
       "      <td>-0.112841</td>\n",
       "      <td>-0.186117</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    intercept_correction  intercept_glob_ISM_correction  \\\n",
       "ion        well                                                           \n",
       "C35H69O8P  dataset              0.012122                       0.023198   \n",
       "C34H68NO6P dataset              0.026882                       0.034094   \n",
       "C43H81O13P dataset              0.179587                       0.175546   \n",
       "C43H78NO8P dataset             -0.081978                      -0.092249   \n",
       "\n",
       "                    intercept_glob_uncorrected  slope_correction  \\\n",
       "ion        well                                                    \n",
       "C35H69O8P  dataset                    0.023198         -1.038932   \n",
       "C34H68NO6P dataset                    0.034094         -1.007595   \n",
       "C43H81O13P dataset                    0.175546         -0.108584   \n",
       "C43H78NO8P dataset                   -0.092249         -0.073275   \n",
       "\n",
       "                    slope_glob_ISM_correction  slope_glob_uncorrected  \n",
       "ion        well                                                        \n",
       "C35H69O8P  dataset                   0.034778               -1.004155  \n",
       "C34H68NO6P dataset                   0.028215               -0.979381  \n",
       "C43H81O13P dataset                  -0.029229               -0.137813  \n",
       "C43H78NO8P dataset                  -0.112841               -0.186117  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1331.74x300 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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OuGXJUREVNOZlcicO3cuNm/ejGXLlqFLly4QBAHHjx/HwoULkZ+fjyVLllg6TiIiIiIiIiIiInqMmZXI/Oyzz/DJJ59g4MCB4r7WrVvjiSeeQGhoKBOZREREREREREREZFFmzQFPT09HkyZNSuxv0qQJ0tPTyx0UERERERERERERkTazRmS2bt0a69atw5o1ayT7161bh9atW1skMKLHlbnVx7XbavdR6jGtSuW6x2QqpUl96rJS5Bg8zzqXX3YQVTTdKt+mVgevbMbi1D2mTWPnoPccAMj7ZoW47fDSzPKGSERERERE1YhZicwPPvgAzz//PA4dOoTg4GDIZDKcOHECt27dwr59+ywdIxERERERERERET3mzJpa3r17d1y9ehVDhgzBgwcPkJ6ejqFDhyIhIQFdu3a1dIxERERERERERET0mDNrRCYA+Pv7s6gPERERERERERERVQqTE5kXLlxAixYtYGVlhQsXLhht26pVq3IHRkRERERERERERFTE5ERmmzZtkJKSAm9vb7Rp0wYymQyCIJRoJ5PJoFarLRokERERERERERERPd5MTmQmJibCy8tL3CYiIiIiIiIiIiKqLDJB37DKUhw7dgydO3eGjY00D6pSqXDixAl069bNYgHWBFlZWXBzc0NmZiZcXV2rOhwyUc6PW8Rt5/5jK+1aZbleWc7TbavNSpEjbjsODjXp2rp9ylRKg+0EGzuD19Nl/eC2uC0fv9TkWB5nfMZQdZCzL8bgMecBr1mkHytlnritsXMQt61z0yXt1E4eBvuwv3FE3LZ54zOT43rc8TlDRBWJzxgiIrIUs6qW9+zZE+np6SX2Z2ZmomfPnuUOioioKkVHR6N+/fqwt7dH+/bt8csvvxhse+TIEchkshKvv/76S9Ju586daNasGeRyOZo1a4Zdu3ZV9G0QERERERERPVLMSmQKggCZTFZif1paGpycnModFBFRVdm+fTvCwsIwd+5cnD17Fl27dkX//v2RlJRk9LyEhAQkJyeLr0aNGonH4uPjMXLkSIwZMwbnz5/HmDFjMGLECPz2228VfTtEREREREREjwyT18gEgKFDhwIoLOgzfvx4yOVy8ZharcaFCxfQuXNny0ZIlSboy4fi9qnRjlUYCVHVWblyJSZOnIhJkyYBAKKionDgwAFs2LABkZGRBs/z9vaGu7u73mNRUVF4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\n",
      "text/plain": [
       "<Figure size 1331.74x300 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from src.evaluation import compare_pre_post_correction\n",
    "compare_pre_post_correction(am_adata, am_adata_cor, proportion_threshold=correction_proportion_threshold)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 15.641174,
   "end_time": "2022-12-06T15:36:08.395635",
   "environment_variables": {},
   "exception": true,
   "input_path": "/home/mklein/FDA_project/pipeline_01_correction.ipynb",
   "output_path": "/home/mklein/FDA_project/analysis/Mx_Coculture/pipeline_01_correction.ipynb",
   "parameters": {
    "analysis_path": "/home/mklein/FDA_project/analysis/Mx_Coculture",
    "condition_name": "condition",
    "deconv_default_min_overlap": 0.3,
    "notebooks": [
     "pipeline_01_correction.ipynb",
     "pipeline_02_processing.ipynb",
     "pipeline_03_evaluation.ipynb"
    ],
    "project": "Mx_Coculture",
    "source_path": "/home/mklein/Raw Data/Coculture",
    "target_path": "/home/mklein/FDA_project/data/Mx_Co_Cultured",
    "well_name": "rowcol"
   },
   "start_time": "2022-12-06T15:35:52.754461",
   "version": "2.3.4"
  },
  "vscode": {
   "interpreter": {
    "hash": "89b4449ee30f46b148fb6825d70934bcbb1ebdb6d5b2015fe3835362773c7289"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
